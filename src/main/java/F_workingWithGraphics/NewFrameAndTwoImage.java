package F_workingWithGraphics;

import javax.swing.*;
import java.awt.*;

public class NewFrameAndTwoImage extends JFrame {
    private final String IMAGE_PATH = "src/main/java/Z_images/Стиль аниме 5.jpg"; // Относительный путь к изображению. Объявляем переменную константой.
    private final String TITLE = "Изображение из файла"; //Константа. Заголовок.
    ImageIcon icon; //Переменная для объекта ImageIcon.
    JLabel label1; //Переменная для объекта JLabel.
    JLabel label2; //Переменная для объекта JLabel.
    JPanel jPanel1; //Переменная для объекта JPanel.
    JPanel jPanel2; //Переменная для объекта JPanel.
    Dimension panelSize; //Переменная для объекта Dimension.

    public NewFrameAndTwoImage() {
        setTitle(TITLE); //добавили метод, который устанавливает заголовок
        setSize(1800, 1000); //В данном методе мы указываем только ширину и высоту окна. Но нет позиционирования на экране. Сработал перегруженный метод.
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //Определяем поведение приложения при закрытии этого окна.
        icon = new ImageIcon(IMAGE_PATH); // Создаем объект типа ImageIcon и добавляем путь к изображению.
        label1 = new JLabel(icon);           //JLabel - это компонент библиотеки Swing, который используется для отображения текста или иконки на JFrame или JPanel
        label2 = new JLabel(icon);
        // JLabel позволяет создавать метки или надписи, которые могут отображать статический текст или изображения.

        jPanel1 = new JPanel(); //Здесь создаём объект типа JPanel.
        jPanel2 = new JPanel(); //JPanel - это контейнерный компонент из библиотеки Swing.
        //Он представляет собой прямоугольную область, которая может содержать другие компоненты, такие как кнопки, текстовые поля, метки и другие компоненты интерфейса.

        // Определение размеров панелей
        panelSize = new Dimension(900, 1000); // Размер панели
        //Dimension - это класс в библиотеке Java AWT (Abstract Window Toolkit), который представляет собой размер компонента или области в виде пары (ширина, высота).
        // Он используется для определения и управления размерами компонентов, графических объектов и других элементов интерфейса.

        // Устанавливаем желаемый размер для jPanel1 и jPanel2
        jPanel1.setPreferredSize(panelSize);
        jPanel2.setPreferredSize(panelSize);

        //Добавляем лейбл с имиджем на панель.
        jPanel1.add(label1);
        jPanel2.add(label2);

        //теперь эти две панели добавляем на сам фрейм.
        add(jPanel1, BorderLayout.EAST);
        add(jPanel2, BorderLayout.WEST);
        // Вторым аргументом идёт BorderLayout.EAST.  BorderLayout - это явно название класса, и если обращение с заглавной буквы, значит это обращение к статике этого класса.
        // В данном случае обращение к константе EAST. Константа - это специальная, не изменяемая переменная.
        // В данном случае EAST и WEST определяет размещение компонентов по сторонам света.
/**
 * BorderLayout - это один из менеджеров компоновки (layout manager) в библиотеке Swing Java,
 * который распределяет компоненты в пять областей: NORTH, SOUTH, EAST, WEST и CENTER.
 * Каждая область может содержать только один компонент, и компоненты заполняют доступное пространство в соответствии с указанной областью.
 *
 * Основные характеристики BorderLayout включают:
 *
 * 1. Пять областей:
 *    - NORTH: располагает компонент сверху.
 *    - SOUTH: располагает компонент снизу.
 *    - EAST: располагает компонент справа.
 *    - WEST: располагает компонент слева.
 *    - CENTER: располагает компонент по центру.
 *
 * 2. По умолчанию расстягивает компоненты:
 *    - NORTH и SOUTH области растягиваются по ширине, а EAST и WEST - по высоте.
 *    - CENTER область занимает все доступное пространство.
 *
 * 3. Однокомпонентные области: Каждая область может содержать только один компонент.
 * Если компоненты помещаются в одну и ту же область, предыдущий компонент будет заменен новым.
 */

//        add(jPanel1); //Без менеджера компоновки панели разместятся друг на друге.
//        add(jPanel2);

        setVisible(true); //Делаем данное окно видимым. Этот метод должен стоять обязательно в конце.
    }
}
