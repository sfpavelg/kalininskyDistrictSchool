package E_B_Stackc_Heap_Return_Exception_Thread.auto.warehouse;

public class СкладКузовов {
    int кузова = 100;

    private static СкладКузовов ЕДИНСТВЕННЫЙСкладКузовов;

    private СкладКузовов() {
    }


    public static СкладКузовов ЕДИНСТВЕННЫЙСкладКузовов() {
        if (ЕДИНСТВЕННЫЙСкладКузовов == null) {
            ЕДИНСТВЕННЫЙСкладКузовов = new СкладКузовов();
            System.out.println("Создан новый объект ЕДИНСТВЕННЫЙСкладКузовов");
        }
        System.out.println("Обращение к уже существующему объекту ЕДИНСТВЕННЫЙСкладКузовов");
        return ЕДИНСТВЕННЫЙСкладКузовов;
    }

    //Exception - ИСКЛЮЧЕНИЕ(исключительная ситуация, ошибка), новая тема!
    //InterruptedException - один из видов исключений.
    //Если может возникнуть ИСКЛЮЧЕНИЕ, то с ней что-то нужно делать, обработать её.
    //но можно это сделать в методе выше по иерархии.
    //throws - называется пробросить ошибку выше.
    //Это всё равно что я отдаю покататься неисправный мопед другу, и говорю: "Сначала гайку подтяни, а то колесо отвалится"
    public int роботПоВыдачеКузовов() throws InterruptedException {
        кузова = кузова - 1;
        String остаток = toString();

        System.out.println("На склад поступила заявка на отгрузку 1 кузова");

        //Thread - это ПОТОК. Новая тема! Поток это процесс.
        // Представь станок с ЧПУ который автоматически изготавливает деталь.
        //Один станок - один ПОТОК.
        //Вся наша программа работает на данный момент в одном потоке.
        //Thread.sleep(5000) -мы говорим нашему потоку заснуть/замереть на 5 секунд.
        Thread.sleep(5000); //задержка на 5 секунд
        System.out.println("роботПоВыдачеКузовов готовит к отгрузке 1 кузов");


        Thread.sleep(5000); //задержка на 5 секунд
        System.out.println("Один Кузов готов к отправке");
        Thread.sleep(5000); //задержка на 5 секунд

        System.out.println("Производится инвентаризация на складе и подсчёт остатков");
        Thread.sleep(5000); //задержка на 5 секунд

        System.out.println("Остаток Кузовов На Складе:" + остаток);
        Thread.sleep(5000); //задержка на 5 секунд

        System.out.println("Работа на СкладКузовов завершена");
        Thread.sleep(5000); //задержка на 5 секунд

        return 1;
    }

    //@Override - аннотация. конкретно эта означает переопределение данного метода toString().
    //То есть он был по дефолту, со своей реализацией. Но мы ему задали новый функционал.
    //String.valueOf(кузова) это приведение типов. String toString() возвращает String, а переменная "кузова" имеет тип int.
    @Override
    public String toString() {
        return String.valueOf(кузова);
    }
}
